Generics:
* implement it
 ** Validate throws and throw-statements using generics

Bytecode generation:
* try/catch/finally
* Stop generation for current block after return (for "if(true) return 3; return 5" and similar cases)

Add errors for:
* Validate that we return and have no unreachable code
 ** Handle basic list of statements
 ** Handle if/then/else
 ** Handle throws/catch/finally
 ** Handle loops
* Validate that final fields and variables are set once.
 ** Fields are set with initializer or set once in constructor
 ** Local variables are set once
* Error if switch case tries to use something that has already been handled (case String s -> ... ; case String s when ...)
* Check that break and continue go to valid labels
* Check that exceptions that are thrown but also caught does not need to be declared
* Check that exceptions from method calls are declared or caught.

Add warnings:
* useless casts

Other:
Rewrite the parser so we co not remove nullable rules and explode the rule numbers
- first version in branch: nullable_grammar_rewrite, need to check performance
